$date
	Wed Nov 20 10:58:14 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module shifter_tb $end
$var wire 32 ! o_srl_data [31:0] $end
$var wire 32 " o_sra_data [31:0] $end
$var wire 32 # o_sll_data [31:0] $end
$var reg 32 $ i_operand_a [31:0] $end
$var reg 5 % i_operand_b [4:0] $end
$scope module sll_inst $end
$var wire 32 & i_operand_a [31:0] $end
$var wire 5 ' i_operand_b [4:0] $end
$var wire 32 ( o_sll_data [31:0] $end
$var reg 32 ) temp1 [31:0] $end
$var reg 32 * temp2 [31:0] $end
$var reg 32 + temp3 [31:0] $end
$var reg 32 , temp4 [31:0] $end
$var reg 32 - temp5 [31:0] $end
$upscope $end
$scope module sra_inst $end
$var wire 32 . i_operand_a [31:0] $end
$var wire 5 / i_operand_b [4:0] $end
$var wire 32 0 o_sra_data [31:0] $end
$var reg 32 1 temp1 [31:0] $end
$var reg 32 2 temp2 [31:0] $end
$var reg 32 3 temp3 [31:0] $end
$var reg 32 4 temp4 [31:0] $end
$var reg 32 5 temp5 [31:0] $end
$upscope $end
$scope module srl_inst $end
$var wire 32 6 i_operand_a [31:0] $end
$var wire 5 7 i_operand_b [4:0] $end
$var wire 32 8 o_srl_data [31:0] $end
$var reg 32 9 temp1 [31:0] $end
$var reg 32 : temp2 [31:0] $end
$var reg 32 ; temp3 [31:0] $end
$var reg 32 < temp4 [31:0] $end
$var reg 32 = temp5 [31:0] $end
$upscope $end
$scope task direct_test $end
$var reg 32 > opa [31:0] $end
$var reg 5 ? opb [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#650
$dumpvars
b1111 ?
b11110000111100001111000011110000 >
b11110000111100001 =
b11110000111100001 <
b1111000011110000111100001 ;
b11110000111100001111000011110 :
b1111000011110000111100001111000 9
b11110000111100001 8
b1111 7
b11110000111100001111000011110000 6
b11111111111111111110000111100001 5
b11111111111111111110000111100001 4
b11111111111000011110000111100001 3
b11111110000111100001111000011110 2
b11111000011110000111100001111000 1
b11111111111111111110000111100001 0
b1111 /
b11110000111100001111000011110000 .
b1111000011110000000000000000000 -
b1111000011110000000000000000000 ,
b1111000011110000111100000000000 +
b10000111100001111000011110000000 *
b11100001111000011110000111100000 )
b1111000011110000000000000000000 (
b1111 '
b11110000111100001111000011110000 &
b1111 %
b11110000111100001111000011110000 $
b1111000011110000000000000000000 #
b11111111111111111110000111100001 "
b11110000111100001 !
$end
#1650
